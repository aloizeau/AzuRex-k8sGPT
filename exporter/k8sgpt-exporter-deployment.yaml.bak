apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8sgpt-exporter
  namespace: k8sgpt
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8sgpt-exporter
rules:
  - apiGroups: ["core.k8sgpt.ai"]
    resources: ["results", "k8sgpts"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8sgpt-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8sgpt-exporter
subjects:
  - kind: ServiceAccount
    name: k8sgpt-exporter
    namespace: k8sgpt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8sgpt-exporter
  namespace: k8sgpt
  labels:
    app: k8sgpt-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8sgpt-exporter
  template:
    metadata:
      labels:
        app: k8sgpt-exporter
    spec:
      serviceAccountName: k8sgpt-exporter
      containers:
        - name: exporter
          image: azurex27.azurecr.io/k8sgpt-exporter:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: metrics
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: k8sgpt-exporter
  namespace: k8sgpt
  labels:
    app: k8sgpt-exporter
spec:
  selector:
    app: k8sgpt-exporter
  ports:
    - port: 8080
      targetPort: 8080
      name: metrics
